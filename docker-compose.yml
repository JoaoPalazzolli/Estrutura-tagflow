services:
  postgres:
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U root -d ${DATABASE_SCHEMA}'" ]
      timeout: 45s
      interval: 10s
      retries: 5
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_SCHEMA}
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - tagflow-net

  pgadmin:
    depends_on:
      postgres:
        condition: service_healthy
    container_name: pgadmin
    restart: always
    image: dpage/pgadmin4
    profiles: [ 'dev' ]
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - tagflow-net

  api:
    depends_on:
      postgres:
        condition: service_started
    container_name: tagflow
    image: jpth/tagflow:2.0.0
    build:
      context: .
      dockerfile: Dockerfile
    command: npx prisma migrate dev
    restart: always
    profiles: [ 'prod' ]
    environment:
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - 3000:${PORT}
    volumes:
      - .:/usr/src/tagflow
    networks:
      - tagflow-net

volumes:
  postgres-data:
  pgadmin-data:

networks:
  tagflow-net:
    driver: bridge